package net.practice.parser;

import java_cup.runtime.*;
import java.util.LinkedList;
import java.util.HashMap;
import java.util.ArrayList;
import net.practice.ast.Program;

parser code{:
    public boolean hasUnRecoveredSyntaxError = false;
    public ArrayList<HashMap<String, String>> errors = new ArrayList<>();

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
        // has some un-recovered syntax error(structure error)
        this.hasUnRecoveredSyntaxError = true;
    }

    public void syntax_error(Symbol cur_token) {
        HashMap<String, String> error = new HashMap<>();
        error.put("text", (String) cur_token.value);
        // todo add token type
        error.put("number", Integer.toString(errors.size() + 1));
        errors.add( error );
    }
:}

terminal
  INCLUDE;

terminal String
  PKG_NAME;

non terminal Program
  program;

non terminal LinkedList
  pkgList;

non terminal String
  pkg;

start with program;

program::= pkgList:pl{:
  RESULT = new Program(pl);
:};

pkgList::=  {: RESULT = new LinkedList<String>(); :}
            | pkg:pk pkgList:pkl{:
              RESULT = pkl;
              RESULT.add(pk);
            :};

pkg::= INCLUDE PKG_NAME:name{: RESULT = name; :};

